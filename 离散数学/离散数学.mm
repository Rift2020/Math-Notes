<map version="freeplane 1.9.8">
<!--To view this file, download free mind mapping software Freeplane from https://www.freeplane.org -->
<node TEXT="离散数学" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" FOLDED="false" ID="ID_1090958577" CREATED="1409300609620" MODIFIED="1640781671496"><hook NAME="MapStyle" background="#2e3440" zoom="0.759">
    <properties show_icon_for_attributes="true" edgeColorConfiguration="#808080ff,#ff0000ff,#0000ffff,#00ff00ff,#ff00ffff,#00ffffff,#7c0000ff,#00007cff,#007c00ff,#7c007cff,#007c7cff,#7c7c00ff" show_note_icons="true" associatedTemplateLocation="template:/dark_nord_template.mm" fit_to_viewport="false"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ID="ID_671184412" ICON_SIZE="12 pt" FORMAT_AS_HYPERLINK="false" COLOR="#484747" BACKGROUND_COLOR="#eceff4" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="8 pt" SHAPE_VERTICAL_MARGIN="5 pt" BORDER_WIDTH_LIKE_EDGE="false" BORDER_WIDTH="1.9 px" BORDER_COLOR_LIKE_EDGE="true" BORDER_COLOR="#f0f0f0" BORDER_DASH_LIKE_EDGE="true" BORDER_DASH="SOLID">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#88c0d0" WIDTH="2" TRANSPARENCY="255" DASH="" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_671184412" STARTARROW="DEFAULT" ENDARROW="NONE"/>
<font NAME="SansSerif" SIZE="11" BOLD="false" STRIKETHROUGH="false" ITALIC="false"/>
<edge STYLE="bezier" COLOR="#81a1c1" WIDTH="3" DASH="SOLID"/>
<richcontent CONTENT-TYPE="plain/auto" TYPE="DETAILS"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/auto"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details" BORDER_WIDTH="1.9 px">
<edge STYLE="bezier" COLOR="#81a1c1" WIDTH="3"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes" COLOR="#eceff4">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" COLOR="#000000" BACKGROUND_COLOR="#ebcb8b">
<icon BUILTIN="clock2"/>
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.floating" COLOR="#484747">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.selection" COLOR="#e5e9f0" BACKGROUND_COLOR="#5e81ac" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#5e81ac"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.important" ID="ID_779275544" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#bf616a">
<icon BUILTIN="yes"/>
<arrowlink COLOR="#bf616a" TRANSPARENCY="255" DESTINATION="ID_779275544"/>
<font SIZE="14"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#ffffff" BACKGROUND_COLOR="#484747" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="10 pt" SHAPE_VERTICAL_MARGIN="10 pt">
<font NAME="Ubuntu" SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#eceff4" BACKGROUND_COLOR="#d08770" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="8 pt" SHAPE_VERTICAL_MARGIN="5 pt">
<font NAME="Ubuntu" SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#3b4252" BACKGROUND_COLOR="#ebcb8b">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#2e3440" BACKGROUND_COLOR="#a3be8c">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#2e3440" BACKGROUND_COLOR="#b48ead">
<font SIZE="11"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5" BACKGROUND_COLOR="#81a1c1">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6" BACKGROUND_COLOR="#88c0d0">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7" BACKGROUND_COLOR="#8fbcbb">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8" BACKGROUND_COLOR="#d8dee9">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9" BACKGROUND_COLOR="#e5e9f0">
<font SIZE="9"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10" BACKGROUND_COLOR="#eceff4">
<font SIZE="9"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<hook NAME="accessories/plugins/AutomaticLayout.properties" VALUE="ALL"/>
<font BOLD="true"/>
<node TEXT="逻辑" POSITION="right" ID="ID_794138631" CREATED="1640781692269" MODIFIED="1640781718368">
<node TEXT="命题逻辑" ID="ID_716758099" CREATED="1641651955604" MODIFIED="1641651962376">
<node TEXT="命题" ID="ID_714942184" CREATED="1641652041321" MODIFIED="1641652045920"/>
<node TEXT="联结词(逻辑运算符)" ID="ID_1356340344" CREATED="1641652046363" MODIFIED="1641652220833"/>
<node TEXT="真值表" ID="ID_880524790" CREATED="1641652097887" MODIFIED="1641652184380"/>
<node TEXT="等值演算" ID="ID_167950429" CREATED="1641652185948" MODIFIED="1641652236001"/>
<node TEXT="范式" ID="ID_1892989496" CREATED="1641652255030" MODIFIED="1641652261857">
<node TEXT="" ID="ID_1971649365" CREATED="1641713265447" MODIFIED="1641713265447"/>
<node TEXT=" 析取范式" ID="ID_581501929" CREATED="1641713396567" MODIFIED="1641713410285">
<node TEXT="一种解法：把合取符号看作乘法，析取看作加法，然后应用所有乘法和加法可以使用的运算方法，把式子全部乘开，最后换回去，就得到了析取范式" ID="ID_1016715880" CREATED="1641713284695" MODIFIED="1641713393722"/>
</node>
<node TEXT="主析取范式/主合取范式" ID="ID_423806259" CREATED="1641713231734" MODIFIED="1641713283349">
<node TEXT="先算出析取范式，(然后消去形如矛盾式和重言式)，将子句中所缺乏命题变元补进去，将重复的极小项消去并且调整顺序，就得到主析取。通过主析取可以快速得到主合取。(也可以单算主合)" ID="ID_1709080075" CREATED="1641713418764" MODIFIED="1641713799300"/>
</node>
</node>
<node TEXT="*最简展开式" ID="ID_1304344702" CREATED="1641652262310" MODIFIED="1641652602688">
<node TEXT="卡诺图" ID="ID_881795208" CREATED="1641652604119" MODIFIED="1641652606335"/>
<node TEXT="quine-mccluskey" ID="ID_418865319" CREATED="1641652606524" MODIFIED="1641652658189"/>
</node>
</node>
<node TEXT="谓词逻辑" ID="ID_844971485" CREATED="1641651962684" MODIFIED="1641651967345">
<node TEXT="量词" ID="ID_1579057504" CREATED="1641652292304" MODIFIED="1641652296303">
<node TEXT="\latex 全称量词:任意的 $\forall$" ID="ID_1033851745" CREATED="1641652913232" MODIFIED="1641653012904"/>
<node TEXT="\latex 存在量词：存在 $\exists$" ID="ID_310753390" CREATED="1641652962776" MODIFIED="1641653008034"/>
</node>
<node TEXT="谓词" ID="ID_1763087472" CREATED="1641652287872" MODIFIED="1641652291775">
<node TEXT="对于诸如&quot;x&gt;3&quot;,&quot;计算机x正在被攻击&quot;,当变量值未指定时，这些语句既不为真也不为假，我们可以用P(x)来表示&quot;x&gt;3&quot;,P是谓词&quot;x&gt;3&quot;而x则是变量。也可以把P(x)看做命题函数" ID="ID_1098417543" CREATED="1641653094032" MODIFIED="1641653304313"/>
</node>
<node TEXT="公式" ID="ID_1467702465" CREATED="1641652827716" MODIFIED="1641707085404">
<node TEXT="符号" ID="ID_1978780942" CREATED="1641654101866" MODIFIED="1641654104586">
<node TEXT="个体常项(常量)a,b,c" ID="ID_1655403455" CREATED="1641654106181" MODIFIED="1641654610579"/>
<node TEXT="个体变项(变量)x,y,z" ID="ID_1985659611" CREATED="1641654143945" MODIFIED="1641654616918"/>
<node TEXT="函数f,g,h(指的是从变项到变项的函数)比如说f(x):x的父亲" ID="ID_859535548" CREATED="1641654171146" MODIFIED="1641654412906"/>
<node TEXT="谓词P,Q,R(指的是从变项到{0,1}的&quot;函数&quot;)" ID="ID_1071435185" CREATED="1641654222685" MODIFIED="1641654423770"/>
<node TEXT="量词符号，联结词符号，括号逗号" ID="ID_1284074325" CREATED="1641654275705" MODIFIED="1641654300252"/>
</node>
<node TEXT="项" ID="ID_916535570" CREATED="1641654586578" MODIFIED="1641654589340">
<node TEXT="\latex 1.任意常量或变量是项 \\2.$f(t_1,t_2,...)$是项，其中f是函数,$t_i$是项，也就是项代进去的函数\\3.有限次使用1和2才是项" ID="ID_1553826703" CREATED="1641654589965" MODIFIED="1641654984672"/>
</node>
<node TEXT="原子公式" ID="ID_99605639" CREATED="1641654812007" MODIFIED="1641654819381">
<node TEXT="\latex $P(t_1,t_2,...)$,P是n元谓词,$t_i$是项,也就是项代进去的谓词" ID="ID_1004949333" CREATED="1641654819676" MODIFIED="1641654957203"/>
</node>
<node TEXT="合式公式" ID="ID_561158895" CREATED="1641655036631" MODIFIED="1641655039932">
<node TEXT="简而言之，有限次的将原子公式用量词修饰或者用联结词联结出来的都是合式公式，原子公式本身也是合式公式" ID="ID_1431304672" CREATED="1641655041001" MODIFIED="1641655119607"/>
</node>
<node TEXT="辖域" ID="ID_1513768699" CREATED="1641705085755" MODIFIED="1641705094833">
<node TEXT="\latex 1.若量词后边紧跟着一个原子公式，则量词的辖域是这个原子公式2.若量词后边跟着括号，则其辖域是整个括号部分3.若有几个量词连在一起，那么量词的辖域就是第一个量词的辖域" ID="ID_317407208" CREATED="1641705094985" MODIFIED="1641705229261"/>
</node>
<node TEXT="自由变元与约束变元" ID="ID_1366107200" CREATED="1641705234678" MODIFIED="1641705504352">
<node TEXT="简单来说，出现在使用变元的量词的辖域里的就是约束变元，否则是自由变元" ID="ID_529630127" CREATED="1641705505824" MODIFIED="1641705689678">
<node TEXT="比如" ID="ID_913306819" CREATED="1641705509960" MODIFIED="1641705624818">
<hook URI="images/辖域与变元.png" SIZE="0.31770003" NAME="ExternalObject"/>
</node>
</node>
<node TEXT="闭式" ID="ID_1803974433" CREATED="1641705773175" MODIFIED="1641705777553">
<node TEXT="若一个公式里没出现自由变元，则称这个式子为闭式" ID="ID_565113198" CREATED="1641705718384" MODIFIED="1641705771007"/>
</node>
</node>
<node TEXT="换名规则" ID="ID_1716883876" CREATED="1641705786061" MODIFIED="1641705880801">
<node TEXT="简而言之就是把本质上指的是一个变元的用一个名字，不是一个变元的用另外一个名字" ID="ID_35573856" CREATED="1641705880973" MODIFIED="1641705935058">
<node TEXT="约束变元改名" ID="ID_1975383938" CREATED="1641705954335" MODIFIED="1641705962573">
<node TEXT="将量词的变元和辖域内此变元约束出现的个体都换一个符号，至少要与辖域内其他变元的符号不同" ID="ID_735968285" CREATED="1641705962903" MODIFIED="1641706056217"/>
</node>
<node TEXT="自由变元代入" ID="ID_861165243" CREATED="1641706062645" MODIFIED="1641706068737">
<node TEXT="每个自由变元都用一个新符号去替换" ID="ID_1240320068" CREATED="1641706069507" MODIFIED="1641706102827"/>
</node>
</node>
</node>
<node TEXT="解释" ID="ID_1503619241" CREATED="1641706236258" MODIFIED="1641706239917">
<node TEXT="其实就是指定&quot;定义域&quot;和&quot;赋值&quot;" ID="ID_1405969354" CREATED="1641706240213" MODIFIED="1641706269580">
<node TEXT="给个体变项指定非空个体域D(&quot;定义域&quot;)，给个体常项指定一个D里的元素，函数和谓词都指定为D上的" ID="ID_1177937190" CREATED="1641706269993" MODIFIED="1641706414118"/>
</node>
<node TEXT="解释下求真值" ID="ID_462464592" CREATED="1641706428729" MODIFIED="1641706437720">
<node TEXT="\latex 显然的，\\任意的得满足在D上都成立，因此枚举每种情况中间连接词是$\wedge$，\\类似的，&quot;存在&quot;，只要D中满足一种情况，枚举然后中间是$\vee$，\\一个解释下应该只有一个真值" ID="ID_1975123554" CREATED="1641706438541" MODIFIED="1641706675007"/>
</node>
</node>
<node TEXT="永真式，永假式，可满足式" ID="ID_1606311074" CREATED="1641706737150" MODIFIED="1641706760153">
<node TEXT="任何解释下都为真，任何解释下都为假，存在至少一种解释为真" ID="ID_989600843" CREATED="1641706760446" MODIFIED="1641706882112"/>
<node TEXT="*谓词逻辑的可判定性" ID="ID_1994614217" CREATED="1641706961762" MODIFIED="1641706974471"/>
</node>
<node TEXT="公式等价" ID="ID_1947079696" CREATED="1641707074403" MODIFIED="1641707080347">
<node TEXT="量词否定等价" ID="ID_534409003" CREATED="1641707128937" MODIFIED="1641707139345">
<node TEXT="\latex $\neg\forall A(x)=\exists\neg A(x)$\\$\neg\exists A(x)=\forall\neg A(x)$" ID="ID_1007202629" CREATED="1641707139563" MODIFIED="1641707229218"/>
</node>
<node TEXT="辖域收缩与扩张" ID="ID_189419582" CREATED="1641707231668" MODIFIED="1641707242395">
<node TEXT="只有3是相反的" ID="ID_803332296" CREATED="1641707242598" MODIFIED="1641707459575">
<hook URI="images/量词扩张与收缩.jpg" SIZE="0.16178508" NAME="ExternalObject"/>
</node>
</node>
<node TEXT="量词分配等值" ID="ID_71418220" CREATED="1641707463380" MODIFIED="1641707479167">
<node TEXT="\latex 只有这两种，其他不成立\\$\forall((A(x)\wedge B(x)))=\forall A(x)\wedge \forall B(x)$\\$\exists (A(x)\vee B(x))=\exists A(x)\vee \exists B(x)$" ID="ID_220284597" CREATED="1641707479409" MODIFIED="1641707656366"/>
</node>
<node TEXT="多量词交换" ID="ID_1165560950" CREATED="1641707713794" MODIFIED="1641707727201">
<node TEXT="\latex 符合语感的,只有同一种量词可以交换顺序\\$\forall x \forall y A(x,y)=\forall y \forall x A(x,y)$\\$\exists x \exists y A(x,y)=\exists y \exists x A(x,y)$" ID="ID_1679064436" CREATED="1641707727523" MODIFIED="1641707851574"/>
</node>
</node>
<node TEXT="前束范式" ID="ID_1203416320" CREATED="1641708027699" MODIFIED="1641708044156">
<node TEXT="通法步骤" ID="ID_330893443" CREATED="1641708236042" MODIFIED="1641708245379">
<node TEXT="\latex 1.消去&quot;\rightarrow&quot;,&quot;\leftrightarrow&quot;\\2.把否定连接符&quot;$\neq$&quot;从量词部分内移到原子公式最前端，\\如$\neg \exists x G(x)=\forall x\neg G(x)$\\3.换名\\4.用谓词等价公式将所有量词提到公式最前端\\并保证其辖域直到公式最末端" ID="ID_1442744940" CREATED="1641708245591" MODIFIED="1641708570460"/>
</node>
</node>
</node>
</node>
<node TEXT="推理规则" ID="ID_1011272715" CREATED="1641652502781" MODIFIED="1641652506649">
<node TEXT="命题逻辑推理" ID="ID_636910490" CREATED="1641707902522" MODIFIED="1641707908532">
<node TEXT="重要推理规则" ID="ID_268781296" CREATED="1641653778354" MODIFIED="1641653937448">
<hook URI="images/推理规则.jpg" SIZE="0.31725928" NAME="ExternalObject"/>
</node>
</node>
<node TEXT="*量化命题推理" ID="ID_351979699" CREATED="1641653992402" MODIFIED="1641654001523"/>
</node>
<node TEXT="证明" ID="ID_1367205515" CREATED="1640838691348" MODIFIED="1641713885716">
<node TEXT="直接证明法" ID="ID_1178308649" CREATED="1641713963759" MODIFIED="1641713970647"/>
<node TEXT="*反证法" ID="ID_406415635" CREATED="1641713970917" MODIFIED="1641713979334"/>
<node TEXT="归谬法" ID="ID_1583844380" CREATED="1641713979585" MODIFIED="1641713983821"/>
</node>
</node>
<node TEXT="基本结构" POSITION="right" ID="ID_471278462" CREATED="1640838710180" MODIFIED="1640838713403">
<node TEXT="集合" ID="ID_1017614320" CREATED="1640781719214" MODIFIED="1640781727915">
<node TEXT="基本概念" ID="ID_1421703303" CREATED="1640784091425" MODIFIED="1640784095750">
<node TEXT="定义" ID="ID_928928111" CREATED="1640784800953" MODIFIED="1640784804348">
<node TEXT="\latex 集合A定义为一堆没有次序的对象\\若x是这堆对象中一个，则称x是A中元素\\记作$x\in A$,否则$x\not \in A$" ID="ID_1527664139" CREATED="1640783072094" MODIFIED="1640783369413"/>
<node TEXT="空集" ID="ID_1282734610" CREATED="1640784125603" MODIFIED="1640784130606"/>
<node TEXT="子集" ID="ID_1234443282" CREATED="1640784130891" MODIFIED="1640784140132">
<node TEXT="\latex $\forall x(x\in A\rightarrow x\in B)$" ID="ID_95888046" CREATED="1640784169319" MODIFIED="1640784203446"/>
</node>
<node TEXT="集合相等" ID="ID_945279843" CREATED="1640784299149" MODIFIED="1640784302947">
<node TEXT="\latex $A\subset B$且$B\subset A$" ID="ID_80916517" CREATED="1640784307890" MODIFIED="1640784427636"/>
<node TEXT="\latex 可以证$A\subset B$并且A,B大小相等(都是有限集)" ID="ID_1752566720" CREATED="1640784475419" MODIFIED="1640784529287"/>
</node>
<node TEXT="集合大小" ID="ID_1001823805" CREATED="1640784450029" MODIFIED="1640784453819"/>
<node TEXT="幂集" ID="ID_582670873" CREATED="1640784607765" MODIFIED="1640784613468">
<node TEXT="S的幂集是S所有子集的集合，记作P(S)" ID="ID_557460556" CREATED="1640784613829" MODIFIED="1640784737614">
<node TEXT="\latex 若S的大小为n,显然P(S)的大小是$2^n$" ID="ID_1799635274" CREATED="1640784665334" MODIFIED="1640784756740"/>
</node>
</node>
</node>
<node TEXT="运算" ID="ID_585967466" CREATED="1640784823824" MODIFIED="1640784826673">
<node TEXT="交集,并集,差集,补集" ID="ID_1416531474" CREATED="1640784827403" MODIFIED="1640785127601">
<node TEXT="\latex $A\cup B=\{x|x\in A或x\in B\}$\\$A\cap B=\{x|x\in A且x\in B\}$\\$A-B=\{x|x\in A且x\not \in B\}$\\U是全集则$\overline A=\{x\in U|x\notin A\}$" ID="ID_987785656" CREATED="1640784877535" MODIFIED="1640785278971"/>
<node TEXT="集合恒等式" ID="ID_1199998804" CREATED="1640785361528" MODIFIED="1640785365960">
<node TEXT="例如德摩根律" ID="ID_435802667" CREATED="1640785368247" MODIFIED="1640785387663">
<node TEXT="这些是非常易证的，使用运算的定义加上逻辑运算恒等式即可" ID="ID_648849566" CREATED="1640785389895" MODIFIED="1640785426316"/>
</node>
</node>
</node>
<node TEXT="对称差" ID="ID_738546238" CREATED="1640930613764" MODIFIED="1640930620374">
<node TEXT="\latex $(A-B)\cup(B-A)$\\只属于其中一个集合" ID="ID_1168409879" CREATED="1640930621486" MODIFIED="1640930699804"/>
</node>
<node TEXT="文氏图" ID="ID_1883327908" CREATED="1640785318516" MODIFIED="1640785325723"/>
</node>
<node TEXT="笛卡尔积" ID="ID_1510948031" CREATED="1640785579460" MODIFIED="1640785582445">
<node TEXT="\latex $A\times B=\{&lt;x,y&gt;|x\in A且y\in B\}$" ID="ID_1422337011" CREATED="1640785620258" MODIFIED="1640785676047">
<node TEXT="如果你熟悉编程，可以感受到这是一个双循环的构造" ID="ID_960587780" CREATED="1640785691350" MODIFIED="1640785867320"/>
<node TEXT="显然笛卡尔积集合的大小是两个集合大小的积，显然不满足交换律" ID="ID_1284523486" CREATED="1640786354596" MODIFIED="1640786424110"/>
</node>
<node TEXT="*对于多个集合的笛卡尔积是符合直觉的" ID="ID_925455517" CREATED="1640786033013" MODIFIED="1640838567247">
<node TEXT="\latex $A_1\times A_2 ...A_n=\{&lt;a_1,a_2,...,a_n&gt;|a_i\in A_i,i=1,2,...,n\}$" ID="ID_1915707918" CREATED="1640786080701" MODIFIED="1640786186180"/>
</node>
</node>
</node>
</node>
<node TEXT="二元关系" ID="ID_469793964" CREATED="1640786753903" MODIFIED="1640786760303">
<node TEXT="\latex 若集合的所有元素都是有序对，\\则称集合为二元关系,记为R\\记$&lt;x,y&gt;\in R$为$xRy$" ID="ID_533113159" CREATED="1640786996407" MODIFIED="1640787538704"/>
<node TEXT="\latex $A\times B$的任何子集定义的二元关系，\\称作A到B的二元关系\\A=B时，称作A上的二元关系" ID="ID_389190734" CREATED="1640787597571" MODIFIED="1640787815878"/>
<node TEXT="关系矩阵，关系图" ID="ID_765250284" CREATED="1640788070690" MODIFIED="1640788090858">
<node TEXT="矩阵是0-1矩阵，图是有向图，若a,b有关系则矩阵M[a][b]=1,否则为0。若a,b有关系则连一条ab有向边" ID="ID_1504966179" CREATED="1640788092249" MODIFIED="1640834947582">
<node TEXT="显然矩阵是方阵" ID="ID_257537093" CREATED="1640834584466" MODIFIED="1640834598518"/>
</node>
</node>
<node TEXT="各种无聊的关系" ID="ID_140558489" CREATED="1640788077280" MODIFIED="1640788313283">
<node TEXT="空关系，全域关系，恒等关系，小于等于关系，整除关系" ID="ID_1647460598" CREATED="1640788313481" MODIFIED="1640788364269"/>
</node>
<node TEXT="关系运算" ID="ID_345969604" CREATED="1640788748238" MODIFIED="1640788770421">
<node TEXT="定义域dom，值域ran，域fld" ID="ID_1542302603" CREATED="1640789088246" MODIFIED="1640789763323">
<node TEXT="取关系里所有x组成集合，取...y..,,  定义域和值域的并" ID="ID_1667216433" CREATED="1640789150682" MODIFIED="1640789242683"/>
</node>
<node TEXT="逆，左合成，限制，像" ID="ID_373244972" CREATED="1640789322028" MODIFIED="1640930723844">
<node TEXT="\latex F,G是任意关系,A是集合1.颠倒次序$F^{-1}=\{&lt;x,y&gt;|yFx\}$\\2.把两个二元关系接起来\\$F\circ G=\{&lt;x,y&gt;| \exists z(xGz且zFy) \}$\\3.把F的定义域锁在A\\$F\upharpoonright A=\{&lt;x,y&gt;|xFy且x\in A\}$\\4.限制后的值域\\$F[A]=ran(F\upharpoonright A)$" ID="ID_1386604058" CREATED="1640790593833" MODIFIED="1640834531507">
<node TEXT="\latex 反应在矩阵上时\\1.$M^T$\\2.$M_{F\circ G} =M_G\times M_F$(反过来矩阵乘)" ID="ID_1910908353" CREATED="1640930743995" MODIFIED="1640930877522"/>
</node>
</node>
<node TEXT="幂" ID="ID_1872848716" CREATED="1640834646378" MODIFIED="1640834653039">
<node TEXT="\latex $R^0=\{&lt;x,x&gt;|x\in A\}$\\R^n=R^{n-1}\circ R,(n\geq 1)" ID="ID_1478325785" CREATED="1640834666738" MODIFIED="1640834732899">
<node TEXT="关系的幂运算等同于{[(关系对应矩阵)的幂]对应的关系}" ID="ID_538266638" CREATED="1640834755989" MODIFIED="1640834816393">
<node TEXT="因此关系的幂运算性质与矩阵幂一致" ID="ID_1333665824" CREATED="1640834828243" MODIFIED="1640835034271"/>
</node>
<node TEXT="*计算" ID="ID_1953554044" CREATED="1640835022844" MODIFIED="1640838586067">
<node TEXT="我们可以使用矩阵快速幂加速运算" ID="ID_512968289" CREATED="1640835036277" MODIFIED="1640835038872"/>
</node>
</node>
</node>
</node>
<node TEXT="关系的性质" ID="ID_391662526" CREATED="1640835196831" MODIFIED="1640835205891">
<node TEXT="自反性，反自反性，对称性，反对称性，传递性" ID="ID_1370845935" CREATED="1640835208003" MODIFIED="1640835239561">
<node TEXT="" ID="ID_368887243" CREATED="1640835239788" MODIFIED="1640835501815">
<hook URI="images/关系性质对应表.jpg" SIZE="0.24567032" NAME="ExternalObject"/>
<node TEXT="*计算" ID="ID_100608978" CREATED="1640835620154" MODIFIED="1640838589577">
<node TEXT="\latex 显然我们可以$O(n)$检查(反)自反性\\$O(n^2)$检查(反)对称性\\传递性可以先计算传递闭包，然后判断是否一样" ID="ID_1273518333" CREATED="1640835625862" MODIFIED="1640836722965"/>
</node>
</node>
</node>
</node>
<node TEXT="关系的闭包" ID="ID_1094825500" CREATED="1640836056515" MODIFIED="1640836063084">
<node TEXT="\latex 自反闭包$r(R)=R\cup R^0$\\对称闭包$s(R)=R\cup R^{-1}$\\传递闭包$t(R)=R\cup R^2\cup....$" ID="ID_1655051552" CREATED="1640836066006" MODIFIED="1640837031236">
<node TEXT="\latex R自反则t(R),s(R)也自反,\\R对称则r(R),t(R)也对称,\\R传递则r(R)也传递,\textcolor {red}{s(R)未必传递}\\有tsr(R)=t(s(r(R)))具备自反性对称性和传递性" ID="ID_1534288567" CREATED="1640836968643" MODIFIED="1640837301102"/>
<node TEXT="实际上，容易想到t(R)右边最多计算到n次(考虑图连成一条链，这是最坏情况)" ID="ID_1350949367" CREATED="1640836174663" MODIFIED="1640836234732"/>
<node TEXT="*t(R)的计算" ID="ID_1207690084" CREATED="1640836275641" MODIFIED="1640838595399">
<node TEXT="\latex 1.按照朴素的算法是做n-1次矩阵乘法和逻辑或\\$O((n-1)n^3)=O(n^4)$\\不过我们可以利用矩阵快速幂的思想\\令$X_0=R$\\repeat($\lceil\log_2 n\rceil$):$X_n=X_{n-1}+X_{n-1}^2$\\$t(R)=X_{\lceil\log_2 n\rceil}$\\复杂度为$O(n^3 \log n)$\\2.也可以从每个点开始搜索，寻找可以到达哪些点$O(n(n+m))$" ID="ID_1697825177" CREATED="1640836285160" MODIFIED="1641045222618"/>
<node TEXT="\latex 沃舍尔算法$O(n^3)$" ID="ID_1746802497" CREATED="1640961347241" MODIFIED="1641044899210">
<node TEXT="沃舍尔和Floyd最短路非常相似" ID="ID_1528875238" CREATED="1641045253023" MODIFIED="1641045268307"/>
</node>
</node>
<node TEXT="传递闭包与可达矩阵的关系" ID="ID_1430582019" CREATED="1641044974201" MODIFIED="1641045040636">
<node TEXT="这两个非常接近，但要注意的是，可达矩阵主对角线必然全1，即所有点都可达自己，而传递闭包主对角线未必全1" ID="ID_833740380" CREATED="1641045041153" MODIFIED="1641045081845"/>
</node>
</node>
</node>
<node TEXT="等价关系和偏序关系" ID="ID_1981042161" CREATED="1640836909209" MODIFIED="1640836922526">
<node TEXT="设R是非空集合A上的关系，如果R自反，对称且传递，则称R是A上的等价关系" ID="ID_1142104130" CREATED="1640836943614" MODIFIED="1640837369232">
<node TEXT="等价类" ID="ID_1119477917" CREATED="1640837701977" MODIFIED="1640837707008">
<node TEXT="\latex 说人话就是，等于x的集合\\$[x]_R=\{y|y\in A且xRy\}$\\等价关系上才有等价类" ID="ID_1707076961" CREATED="1640837708918" MODIFIED="1640837793437"/>
</node>
<node TEXT="商集" ID="ID_953969864" CREATED="1640837824042" MODIFIED="1640837832598">
<node TEXT="\latex 集合A上所有等价类的集合\\$A/R=\{[x]_R|x\in A\}$" ID="ID_652115758" CREATED="1640837832930" MODIFIED="1640837875105"/>
</node>
<node TEXT="划分" ID="ID_1454591336" CREATED="1640837916926" MODIFIED="1640837920138">
<node TEXT="\latex 符合直觉的形如$\{\{a\},\{b,c\},\{d\}\}$叫划分\\若$\pi$是A的一个子集族且\\1.$\emptyset \not \in \pi$\\2.$\pi$中任意两个元素不交\\3.$\pi$中所有元素并集等于A\\则称\pi为A的划分,\pi的元素称为划分块" ID="ID_1995175337" CREATED="1640837920658" MODIFIED="1640838225348"/>
</node>
</node>
<node TEXT="\latex 设R是非空集合A上的关系，如果R自反，\textcolor{red}{反对称}\\且传递，则称R是A上的偏序关系" ID="ID_1367729766" CREATED="1640837414749" MODIFIED="1640837454041">
<node TEXT="全序" ID="ID_301989897" CREATED="1640838258105" MODIFIED="1640838329292">
<node TEXT="符合直觉的，如果A中任意两个元素都可比，则称该偏序关系为全序关系" ID="ID_1967892753" CREATED="1640838329546" MODIFIED="1640838381985">
<node TEXT="比如正整数中的小于等于关系就是全序的。但正整数的整除关系就仅仅只是偏序关系" ID="ID_483203859" CREATED="1640838382177" MODIFIED="1640838448512"/>
</node>
</node>
<node TEXT="哈斯图" ID="ID_1649282735" CREATED="1640838481988" MODIFIED="1640838485509">
<node TEXT="覆盖" ID="ID_1137827702" CREATED="1640931183102" MODIFIED="1640931188940">
<node TEXT="\latex 对于任意$a\preceq b$，若不存在c使得$a\preceq c \preceq b$,则称b覆盖a\\(相当于是&quot;最近&quot;的元素)" ID="ID_1519370578" CREATED="1640930896807" MODIFIED="1640931180571"/>
</node>
<node TEXT="怎么画" ID="ID_978448017" CREATED="1640931191822" MODIFIED="1640931239327">
<node TEXT="元素抽象成点，&quot;较小的&quot;元素应当在下方，不画自环，只画覆盖的边，一般自下而上画" ID="ID_132276369" CREATED="1640931239657" MODIFIED="1640931308275"/>
</node>
</node>
<node TEXT="最元，极元，界" ID="ID_1085713586" CREATED="1640838499680" MODIFIED="1640838523632"/>
<node TEXT="*格" ID="ID_370600487" CREATED="1640961480259" MODIFIED="1640961485560"/>
</node>
</node>
</node>
<node TEXT="*函数" ID="ID_441550461" CREATED="1640838534895" MODIFIED="1640838552210"/>
</node>
<node TEXT="*数论与密码学" POSITION="right" ID="ID_359950678" CREATED="1640838767622" MODIFIED="1640838792817">
<node TEXT="素数" ID="ID_192251897" CREATED="1640960459441" MODIFIED="1640960461829">
<node TEXT="素数判定与筛法" ID="ID_122884216" CREATED="1640960462380" MODIFIED="1640960472552"/>
</node>
<node TEXT="公约数与模运算" ID="ID_370313564" CREATED="1640960555537" MODIFIED="1640962082074">
<node TEXT="gcd" ID="ID_1779830290" CREATED="1640960563447" MODIFIED="1641087799313" LINK="mdNotes/gcd与exgcd与逆元.md">
<node TEXT="一种求两数最大公约数的算法" ID="ID_1229468978" CREATED="1640960656240" MODIFIED="1641087708839">
<node TEXT="最坏时间复杂度为O(log n)" ID="ID_1020171075" CREATED="1641087709164" MODIFIED="1641087724152">
<node TEXT="最坏情况是输入斐波那契数列中两个相邻的数" ID="ID_273660551" CREATED="1641087732147" MODIFIED="1641087756912"/>
<node TEXT="具体参见拉梅定理" ID="ID_314492144" CREATED="1641087757835" MODIFIED="1641087768496"/>
</node>
</node>
<node TEXT="exgcd" ID="ID_1993142295" CREATED="1640960581357" MODIFIED="1641087807410" LINK="mdNotes/gcd与exgcd与逆元.md">
<node TEXT="已知整数a,b,求ax+by=gcd(a,b)" ID="ID_1866124490" CREATED="1641087808692" MODIFIED="1641087838502"/>
</node>
</node>
<node TEXT="模运算基本性质" ID="ID_1017592745" CREATED="1640960558289" MODIFIED="1640960563278">
<node TEXT="(a+b)%m==((a%m)+(b%m))%m&#xa;(a-b)%m==((a%m)-(b%m))%m&#xa;(a*b)%m==((a%m)*(b%m))%m&#xa;//注意：除法没有这个性质" ID="ID_1737455152" CREATED="1641087355477" MODIFIED="1641087364202"/>
</node>
<node TEXT="模逆元" ID="ID_501968060" CREATED="1640960593940" MODIFIED="1640960599952">
<node TEXT="\latex 若$ax\equiv 1 mod \ m$则称$a$为$x \ mod \ m$的逆元，记作$x^{-1}$" ID="ID_577981481" CREATED="1641087402413" MODIFIED="1641087502742">
<node TEXT="乘法逆元存在条件" ID="ID_705252633" CREATED="1641087522308" MODIFIED="1641087538794" LINK="mdNotes/贝祖定理和欧拉定理.md"/>
</node>
<node TEXT="可以使用exgcd或是费马小定理求" ID="ID_1810665785" CREATED="1641087935187" MODIFIED="1641087957783"/>
</node>
<node TEXT="贝祖定理" ID="ID_496927403" CREATED="1640960678495" MODIFIED="1641087251292" LINK="mdNotes/贝祖定理和欧拉定理.md">
<node TEXT="\latex 若a，b是不全为零的整数则存在整数x，y，\\使得$ax+by=gcd(a,b)$" ID="ID_1500847659" CREATED="1641088178530" MODIFIED="1641088192670"/>
</node>
<node TEXT="同余方程" ID="ID_906454012" CREATED="1640961988003" MODIFIED="1640961992269">
<node TEXT="费马小定理" ID="ID_406530475" CREATED="1640960710100" MODIFIED="1640960713662">
<node TEXT="\latex 若p为素数，gcd(a,p)=1,则\[a^{p-1}\equiv 1(mod \ p)\]" ID="ID_1673429085" CREATED="1641088256026" MODIFIED="1641088390669"/>
</node>
<node TEXT="欧拉定理" ID="ID_745885710" CREATED="1640960680599" MODIFIED="1641087242901" LINK="mdNotes/贝祖定理和欧拉定理.md">
<node TEXT="\latex 若$gcd(k,n)=1$,则\[k^{\phi(n)}\equiv 1\ mod \ n\]" ID="ID_982919663" CREATED="1641088210426" MODIFIED="1641088375552"/>
</node>
<node TEXT="中国剩余定理" ID="ID_1626680624" CREATED="1640962039023" MODIFIED="1640962045282"/>
</node>
<node TEXT="同余应用" ID="ID_603705140" CREATED="1640961933698" MODIFIED="1640961937164">
<node TEXT="校验码" ID="ID_631762797" CREATED="1640961937885" MODIFIED="1640961942923"/>
<node TEXT="伪随机" ID="ID_1143643688" CREATED="1640961943131" MODIFIED="1640961946338"/>
<node TEXT="散列函数" ID="ID_136763120" CREATED="1640961947244" MODIFIED="1640961957897"/>
</node>
</node>
<node TEXT="密码系统" ID="ID_1402771190" CREATED="1640960805367" MODIFIED="1640960815376">
<node TEXT="私钥密码系统" ID="ID_814268075" CREATED="1641088488449" MODIFIED="1641088489515">
<node TEXT="古典密码" ID="ID_318605525" CREATED="1640961911355" MODIFIED="1640961914391"/>
</node>
<node TEXT="公钥密码系统" ID="ID_989802059" CREATED="1640960824466" MODIFIED="1640960850965">
<node TEXT="RSA密码系统" ID="ID_1562947809" CREATED="1640960796535" MODIFIED="1641087135206" LINK="mdNotes/RSA密码系统.png"/>
</node>
</node>
</node>
<node TEXT="*归纳与递归" POSITION="right" ID="ID_1917552756" CREATED="1640838815354" MODIFIED="1641087108250" LINK="mdNotes/归纳与递归.md">
<node TEXT="数学归纳法" ID="ID_1459993644" CREATED="1640961678283" MODIFIED="1640961682883"/>
<node TEXT="强归纳法" ID="ID_1717276697" CREATED="1640961683180" MODIFIED="1640961687104"/>
<node TEXT="递归定义" ID="ID_94479686" CREATED="1640961687491" MODIFIED="1640961690799"/>
</node>
<node TEXT="*计数技术与组合数学" POSITION="right" ID="ID_150326879" CREATED="1640838822551" MODIFIED="1640838873940">
<node TEXT="鸽巢原理" ID="ID_1665880853" CREATED="1640961714574" MODIFIED="1640961720171"/>
<node TEXT="排列组合" ID="ID_1576662666" CREATED="1640961633548" MODIFIED="1640961638522"/>
<node TEXT="二项式定理" ID="ID_97503797" CREATED="1640961638793" MODIFIED="1640961642049"/>
<node TEXT="容斥原理" ID="ID_530709896" CREATED="1640961642652" MODIFIED="1640961874294"/>
<node TEXT="生成函数" ID="ID_553526873" CREATED="1640961874470" MODIFIED="1640961877976"/>
</node>
<node TEXT="基础算法" POSITION="right" ID="ID_1310116139" CREATED="1640961579284" MODIFIED="1640961582196">
<node TEXT="搜索" ID="ID_1718011467" CREATED="1640961582398" MODIFIED="1640961586882"/>
<node TEXT="贪心" ID="ID_1081841650" CREATED="1640961587494" MODIFIED="1640961589472"/>
<node TEXT="复杂度" ID="ID_755596592" CREATED="1640961589932" MODIFIED="1640961595337"/>
</node>
<node TEXT="图论" POSITION="right" ID="ID_1063695321" CREATED="1640781728188" MODIFIED="1640781730579">
<node TEXT="图的模型" ID="ID_1061165455" CREATED="1640931324496" MODIFIED="1640931374777">
<node TEXT="\latex 一个图由两个集合构成G=(V,E),\\V是非空的顶点集,E是边的集合，\\通常考虑两个集合都不是无限集的情形" ID="ID_1753618218" CREATED="1640931375086" MODIFIED="1640931580604"/>
<node TEXT="图的表示" ID="ID_670382414" CREATED="1640960213283" MODIFIED="1640960216845">
<node TEXT="矩阵表示" ID="ID_183335704" CREATED="1640960225361" MODIFIED="1640960231120">
<node TEXT="关联矩阵" ID="ID_793055898" CREATED="1640960248106" MODIFIED="1640960253047"/>
<node TEXT="邻接矩阵" ID="ID_879194059" CREATED="1640960253297" MODIFIED="1640960273653"/>
<node TEXT="可达矩阵" ID="ID_155280896" CREATED="1640960274103" MODIFIED="1640960278348"/>
</node>
<node TEXT="图的存储(计算机)" ID="ID_742756529" CREATED="1640958724773" MODIFIED="1640958732404">
<node TEXT="最常使用的是邻接表和邻接矩阵，直接存边偶尔也会使用" ID="ID_1769972447" CREATED="1640958733018" MODIFIED="1640958776919">
<node TEXT="\latex 搜索整张图对于邻接表是O(n+m)，\\对于邻接矩阵则为O(n^2)通常仅仅在稠密图上使用邻接矩阵" ID="ID_1489207431" CREATED="1640958808221" MODIFIED="1640958882728"/>
</node>
</node>
</node>
</node>
<node TEXT="基础定义和分类" ID="ID_1684971269" CREATED="1640931589427" MODIFIED="1640958966006">
<node TEXT="简单图与多重图" ID="ID_115146246" CREATED="1640931595450" MODIFIED="1640931612138">
<node TEXT="\latex 取决于边集是否是\textcolor{red}{多重集}，否 则为简单图(简单图不存在自环或重复的边)" ID="ID_560139415" CREATED="1640931612642" MODIFIED="1640949660716"/>
</node>
<node TEXT="有向图和无向图" ID="ID_1143561895" CREATED="1640931694021" MODIFIED="1640931767971"/>
<node TEXT="度" ID="ID_1207335484" CREATED="1640931768827" MODIFIED="1640931861562">
<node TEXT="无向图" ID="ID_1970022229" CREATED="1640949565044" MODIFIED="1640949570580">
<node TEXT="与一个顶点v关联的边的条数称作该顶点的 度 (Degree)，记作D(v)" ID="ID_1074215715" CREATED="1640931862218" MODIFIED="1640931876060">
<node TEXT="容易发现，一条边总共为整张图贡献 2度" ID="ID_182924065" CREATED="1640931877367" MODIFIED="1640931917665"/>
</node>
</node>
<node TEXT="有向图" ID="ID_156787151" CREATED="1640949573611" MODIFIED="1640949577581">
<node TEXT="入度：以一个顶点v 为起点的边的条数称为该顶点的 。出度：以一个顶点v为终点的边的条数称为该节点的 入度" ID="ID_566369307" CREATED="1640949578338" MODIFIED="1640949607601"/>
</node>
</node>
<node TEXT="路径，(简单)通路，(简单)回路" ID="ID_122002995" CREATED="1640931957108" MODIFIED="1640932140553">
<node TEXT="怎么喜欢用不一样名称(生气)" ID="ID_1767129351" CREATED="1640932210159" MODIFIED="1640932233046">
<node TEXT="\latex 对应表(左:OIWIKI,右:学校离散)\\途径 (Walk)--通路\\迹 (Trail)--简单通路\\路径(Path)(又称 简单路径 (Simple path))--初级通路\\环,圈(Cycle)--初级回路,圈" ID="ID_1199879977" CREATED="1640932234757" MODIFIED="1640948580771"/>
</node>
<node TEXT="定义" ID="ID_1270464428" CREATED="1640949351990" MODIFIED="1640949356508">
<node TEXT="https://oi-wiki.org/graph/concept/#_5" ID="ID_1048061537" CREATED="1640949358281" MODIFIED="1640959384151" LINK="https://oi-wiki.org/graph/concept/#_5"/>
</node>
</node>
<node TEXT="连通性" ID="ID_960801056" CREATED="1640949749957" MODIFIED="1640949752911">
<node TEXT="点连通/可达" ID="ID_1457582717" CREATED="1640949787456" MODIFIED="1640950140663">
<node TEXT="\latex 对于任意$u,v\in V$两个点存在途径有$v_0=u,v_k=v$，\\则无向图称两点连通\\而有向图称u可达v，注:任何点都可达自身" ID="ID_1240914455" CREATED="1640950142784" MODIFIED="1640950367935"/>
</node>
<node TEXT="无向图连通" ID="ID_901308255" CREATED="1640958446539" MODIFIED="1640958451685">
<node TEXT="任意两点连通则该图为连通图" ID="ID_1206758711" CREATED="1640958451956" MODIFIED="1640958468836">
<node TEXT="任取一个点开始搜索，查看是否能到达所有点O(n+m)" ID="ID_1566351857" CREATED="1640958895945" MODIFIED="1640958935500"/>
</node>
</node>
<node TEXT="有向图" ID="ID_1341907964" CREATED="1640958470692" MODIFIED="1640958474210">
<node TEXT="弱连通：有向图改为无向图后无向图是否连通" ID="ID_19392742" CREATED="1640949791017" MODIFIED="1640949871749"/>
<node TEXT="单向连通：任意两个点至少一个可达另一个" ID="ID_734803217" CREATED="1640949894533" MODIFIED="1640949916893"/>
<node TEXT="强连通：任意两点互相可达" ID="ID_725775912" CREATED="1640949917914" MODIFIED="1640950024186"/>
<node TEXT="\latex 可知：$弱连通\rightarrow单向连通\rightarrow强连通$" ID="ID_1615683399" CREATED="1640950026009" MODIFIED="1640950088846"/>
</node>
</node>
<node TEXT="子图" ID="ID_756383298" CREATED="1640959459489" MODIFIED="1640959461793">
<node TEXT="\latex 符合直觉的:\\设$G=(V,E),G&apos;=(V&apos;,E&apos;)$,若$V&apos;\subset V$且$E&apos;\subset E$\\则称G&apos;为G的子图，G为G&apos;母图,记$G&apos;\subset G$" ID="ID_1914396164" CREATED="1641045344240" MODIFIED="1641045584742"/>
<node TEXT="真子图，生成子图，导出子图" ID="ID_1719547635" CREATED="1641045597287" MODIFIED="1641045630274">
<node TEXT="\latex 1.若V&apos;或E&apos;有一个是真子集则为真子图\\2.若G&apos;是子图且V&apos;=V则为生成子图\\3.若G&apos;是子图,V&apos;是V的非空子集，\\且E&apos;中有且仅有两端点均在V&apos;中的边\\称V&apos;导出的导出子图,记G[V&apos;]\\相似的,若G&apos;是子图,E&apos;是E的非空子集，\\且V&apos;中有且仅有E&apos;中边关联的端点\\称E&apos;导出的导出子图,记$G[E&apos;]$" ID="ID_42750207" CREATED="1641045634926" MODIFIED="1641046099942"/>
</node>
</node>
<node TEXT="完全图" ID="ID_941743273" CREATED="1641046249108" MODIFIED="1641046253032">
<node TEXT="符合直觉的，对于无向图,每两个点之间都有一条边，对于有向图，每两个点u,v都有一条u-&gt;v的边也有一条v-&gt;u的边" ID="ID_1957302862" CREATED="1641046253541" MODIFIED="1641046344785"/>
</node>
<node TEXT="补图" ID="ID_959326760" CREATED="1640959462180" MODIFIED="1640959465394">
<node TEXT="符合直觉的，简单来说，就是原图和补图的并是完全图" ID="ID_704963230" CREATED="1641046174725" MODIFIED="1641046351719"/>
</node>
<node TEXT="图的同构" ID="ID_624802345" CREATED="1640959465876" MODIFIED="1640959470290">
<node TEXT="简单来说，如果可以将G1的顶点重新取名就可以让G1=G2，则称G1与G2同构" ID="ID_437183221" CREATED="1641046376700" MODIFIED="1641046430991">
<node TEXT="*很遗憾，这个问题是np问题" ID="ID_804410608" CREATED="1641046475157" MODIFIED="1641091051331"/>
</node>
</node>
</node>
<node TEXT="进一步的概念" ID="ID_811339672" CREATED="1640958701352" MODIFIED="1640959615988">
<node TEXT="割点与桥" ID="ID_249588498" CREATED="1640959851711" MODIFIED="1640959857282">
<node TEXT="如果去掉这个点，图的极大连通分量数增加了，则称割点。类似的，叫割边，又称 桥" ID="ID_54947561" CREATED="1641091179920" MODIFIED="1641091283002"/>
<node TEXT="tarjan算法" ID="ID_608634946" CREATED="1641091132031" MODIFIED="1641091148499"/>
</node>
<node TEXT="连通分量(连通块)" ID="ID_1519376655" CREATED="1640959643523" MODIFIED="1640959663792">
<node TEXT="\latex 直观的，其实就是“局部的”“最大的”连通“块”\\对于无向图G，若H是G的一个连通子图，\\且不存在连通图F满足$H\subsetneqq F \subset G$，\\则称H是G的一个连通分量\\类似的，对于有向图，也有弱连通分量与强连通分量。" ID="ID_914293195" CREATED="1641093590864" MODIFIED="1641093889759">
<node TEXT="*无向图连通分量/弱连通分量" ID="ID_1528775388" CREATED="1641093911823" MODIFIED="1641094085004">
<node TEXT="很容易，每次dfs时用一个新的标记比如(++cnt)，就可以找出所有不同连通块" ID="ID_1601109767" CREATED="1641093929942" MODIFIED="1641093983505"/>
</node>
<node TEXT="*强连通分量" ID="ID_131453596" CREATED="1641093984511" MODIFIED="1641094087128">
<node TEXT="Tarjan算法" ID="ID_456078720" CREATED="1641094011167" MODIFIED="1641094030955"/>
<node TEXT="Kosaraju算法" ID="ID_1281395359" CREATED="1641094019662" MODIFIED="1641094033226"/>
</node>
</node>
</node>
<node TEXT="最短路" ID="ID_216523379" CREATED="1640959664555" MODIFIED="1640959686941">
<node TEXT="*Floyd" ID="ID_741577124" CREATED="1641088538425" MODIFIED="1641091020162">
<node TEXT="\latex 求任意两点最短路,O(n^3)" ID="ID_1406115550" CREATED="1641088574969" MODIFIED="1641088593682"/>
</node>
<node TEXT="*Bellman-Ford / SPFA" ID="ID_729035502" CREATED="1641088594856" MODIFIED="1641091023706">
<node TEXT="求单源最短路，SPFA是队列优化后的B-F，通常跑的很快，但最坏时间复杂度(随机数据几乎不可能)会掉到和B-F相同的O(nm)" ID="ID_1626254723" CREATED="1641088614272" MODIFIED="1641088779699"/>
</node>
<node TEXT="Dijkstra" ID="ID_1134745363" CREATED="1641088728424" MODIFIED="1641088738770">
<node TEXT="\latex 求\textcolor{red}{非负权图}单源最短路，不进行优化时为$O(n^2)$，\\最多可以优化到$O(n \log n)$" ID="ID_414145903" CREATED="1641088739033" MODIFIED="1641089035445"/>
<node TEXT="*其实我觉得，Dij可以考虑成就是个带松弛(再带个优先队列)的bfs" ID="ID_1726350464" CREATED="1641090700841" MODIFIED="1641091008611"/>
<node TEXT="我能不能不写学校考试的无聊题啊，手写暴力dij，就一行一行更新呗有什么好说哒，rnm退钱" ID="ID_1446619368" CREATED="1641090865417" MODIFIED="1641090931708"/>
<node TEXT="*正确性证明" ID="ID_1358740859" CREATED="1641088862640" MODIFIED="1641091014387" LINK="mdNotes/dijkerstra算法正确性证明.md"/>
</node>
<node TEXT="*Johnson" ID="ID_564061182" CREATED="1641088952687" MODIFIED="1641091027211">
<node TEXT="比Floyd更快的全源最短路，O(NM log M)" ID="ID_708619079" CREATED="1641088956695" MODIFIED="1641089007386"/>
</node>
</node>
<node TEXT="图的着色" ID="ID_1117092686" CREATED="1640959701877" MODIFIED="1640959712364">
<node TEXT="点着色" ID="ID_1329390090" CREATED="1641090322803" MODIFIED="1641090326190">
<node TEXT="对无向图顶点着色，且相邻顶点不能同色。若G是k可着色的，但不是(k-1)可着色的，则称k是G的色数" ID="ID_1173636135" CREATED="1641089297726" MODIFIED="1641089392514">
<node TEXT="*很遗憾，普通图的着色问题是np-complete的，不过我们有一些近似算法" ID="ID_1752234325" CREATED="1641089497262" MODIFIED="1641090995051"/>
</node>
<node TEXT="*对于二分图着色，我们有多项式时间算法可以解决" ID="ID_583683288" CREATED="1641090527842" MODIFIED="1641090990802"/>
<node TEXT="*一些结论" ID="ID_878257056" CREATED="1641090072035" MODIFIED="1641090987115">
<node TEXT="如果图中点度数最大为k，那么图一定是k+1可着色的" ID="ID_814142287" CREATED="1641090085939" MODIFIED="1641090121718"/>
</node>
<node TEXT="应用" ID="ID_303689706" CREATED="1641090380724" MODIFIED="1641090404245">
<node TEXT="计算机寄存器分配" ID="ID_1721085051" CREATED="1641090404491" MODIFIED="1641090409926"/>
</node>
</node>
<node TEXT="*边着色" ID="ID_1395565787" CREATED="1641090355858" MODIFIED="1641090979955"/>
</node>
<node TEXT="欧拉图" ID="ID_251141949" CREATED="1640959712662" MODIFIED="1640959720622">
<node TEXT="直观来说,欧拉图就是从任意点开始都可一笔画，半欧拉图必须从某个点开始才能一笔画" ID="ID_1794375577" CREATED="1641094190406" MODIFIED="1641094263912"/>
<node TEXT="准确定义" ID="ID_337270600" CREATED="1641094230774" MODIFIED="1641094235529">
<node TEXT="https://oi-wiki.org/graph/euler/#_1" ID="ID_1999546152" CREATED="1641094266742" MODIFIED="1641094277129" LINK="https://oi-wiki.org/graph/euler/#_1"/>
</node>
<node TEXT="判定" ID="ID_582805500" CREATED="1641094354053" MODIFIED="1641094357848">
<node TEXT="无向图" ID="ID_97724496" CREATED="1641094358245" MODIFIED="1641094364464">
<node TEXT="欧拉图：当且仅当G连通且没有奇度顶点。半欧拉图：是欧拉图或者G连通且G恰有2个奇度顶点(画法以这两个点分别为起点和终点)" ID="ID_894592421" CREATED="1641094365768" MODIFIED="1641094455775"/>
</node>
<node TEXT="*有向图" ID="ID_184968560" CREATED="1641094594580" MODIFIED="1641094641775">
<node TEXT="(1)所有点入度出度相同并且属于同一个强连通分量（任意两点互相可以抵达），那么是欧拉图&#xa;(2)是半欧拉图当且仅当：&#xa;1是弱连通图（所有有向边替换成无向边后，无向图连通）&#xa;2最多有一个点 出度-入度=1 这个点要作为起点&#xa;3最多有一个点 入度-出度=1 这个点作为终点&#xa;4其他点 入度等于出度" ID="ID_384822408" CREATED="1641094598045" MODIFIED="1641094636167"/>
</node>
</node>
<node TEXT="*算法" ID="ID_40020211" CREATED="1641094650268" MODIFIED="1641094902959">
<node TEXT="对于无向图比较简单" ID="ID_391694130" CREATED="1641094834044" MODIFIED="1641094839382">
<node TEXT="先判断是不是，然后dfs并且逆序保存节点号序列，最后打印" ID="ID_1203257963" CREATED="1641094839659" MODIFIED="1641094879295"/>
</node>
<node TEXT="Fleury算法(避桥法)" ID="ID_1837098823" CREATED="1641094652948" MODIFIED="1641094748134"/>
<node TEXT="Hierholzer算法" ID="ID_1572340202" CREATED="1641094749420" MODIFIED="1641094764319"/>
</node>
<node TEXT="*应用" ID="ID_1205597071" CREATED="1641094708964" MODIFIED="1641094909414">
<node TEXT="可用于计算机译码" ID="ID_722205065" CREATED="1641094711876" MODIFIED="1641094718087"/>
</node>
</node>
<node TEXT="哈密顿图" ID="ID_1497405052" CREATED="1640959720804" MODIFIED="1640959724446">
<node TEXT="通过图中所有顶点一次且仅一次的通路称为哈密顿通路。&#xa;通过图中所有顶点一次且仅一次的回路称为哈密顿回路。&#xa;具有哈密顿回路的图称为哈密顿图。&#xa;具有哈密顿通路而不具有哈密顿回路的图称为半哈密顿图。" ID="ID_1030564032" CREATED="1641094939291" MODIFIED="1641095050495">
<node TEXT="*很遗憾，判断一个图是否具有哈密顿回路是np-complete的" ID="ID_1354775310" CREATED="1641095071043" MODIFIED="1641095148645"/>
</node>
<node TEXT="性质" ID="ID_1349040485" CREATED="1641095271258" MODIFIED="1641095275862">
<node TEXT="\latex 设G是哈密顿图,$V_1$是V的非空子集，\\则$p(G-V_1)\leq |V_1|$,其中$p(x)$指的是x的连通分支数" ID="ID_974772906" CREATED="1641095277306" MODIFIED="1641095383747"/>
</node>
<node TEXT="竞赛图" ID="ID_897670368" CREATED="1641095529337" MODIFIED="1641095532779">
<node TEXT="每对顶点都恰有一条有向边。当然也可以考虑是对无向完全图中的每条边随便分配一个方向" ID="ID_353404627" CREATED="1641095563850" MODIFIED="1641095622987"/>
</node>
<node TEXT="一些是哈密顿图的充分非必要条件" ID="ID_1082631234" CREATED="1641095109267" MODIFIED="1641095191773">
<node TEXT="1.强连通的竞赛图是哈密顿图&#xa;2.阶数至少为2的竞赛图具有哈密顿通路&#xa;3.如果无向简单图任意两个不相邻顶点的度数和都大于等于n-1，则存在哈密顿通路" ID="ID_1025092514" CREATED="1641095121283" MODIFIED="1641095787123"/>
</node>
</node>
</node>
<node TEXT="*再进一步的概念" ID="ID_666696627" CREATED="1640960005611" MODIFIED="1640960019145">
<node TEXT="平面图" ID="ID_529215407" CREATED="1640962147430" MODIFIED="1640962150922"/>
<node TEXT="拓扑排序" ID="ID_1735204621" CREATED="1640960026492" MODIFIED="1640960030442"/>
<node TEXT="网络流" ID="ID_1923380485" CREATED="1640960055973" MODIFIED="1640960059165"/>
<node TEXT="二分图" ID="ID_1233525318" CREATED="1641091425719" MODIFIED="1641091427970"/>
<node TEXT="图的匹配" ID="ID_1672726749" CREATED="1640960068534" MODIFIED="1640960071296"/>
</node>
<node TEXT="树" ID="ID_749088172" CREATED="1640959622602" MODIFIED="1640959624708">
<node TEXT="无向无环的连通图，称为无向树，简称树" ID="ID_1766535806" CREATED="1640959758105" MODIFIED="1641095963795"/>
<node TEXT="树的基本概念" ID="ID_783252416" CREATED="1640959737389" MODIFIED="1640959755473">
<node TEXT="生成树" ID="ID_68597362" CREATED="1640959739021" MODIFIED="1640959742917">
<node TEXT="设G是无向连通图，T是G的生成子图且是树，则称T是生成树" ID="ID_15476488" CREATED="1641714408402" MODIFIED="1641714440847"/>
<node TEXT="树枝，弦" ID="ID_228570971" CREATED="1641714444812" MODIFIED="1641714476294">
<node TEXT="T中的边称作树枝，在G中但不在T中的边称作弦" ID="ID_744211234" CREATED="1641714476687" MODIFIED="1641714504454"/>
</node>
<node TEXT="基本回路系统" ID="ID_54875048" CREATED="1641714668324" MODIFIED="1641714672219">
<node TEXT="基本回路" ID="ID_164344685" CREATED="1641714357312" MODIFIED="1641714362608">
<node TEXT="对于一条弦，存在仅由该弦和树枝构成的一个圈，可以证明圈是唯一的，该圈就叫基本回路" ID="ID_1465876932" CREATED="1641714606348" MODIFIED="1641714664140"/>
</node>
<node TEXT="所有基本回路的集合叫作生成树的基本回路系统" ID="ID_1605176361" CREATED="1641714675584" MODIFIED="1641714701751"/>
</node>
<node TEXT="基本割集系统" ID="ID_964414761" CREATED="1641714703182" MODIFIED="1641714778978">
<node TEXT="基本割集" ID="ID_200512199" CREATED="1641717242620" MODIFIED="1641717249132">
<node TEXT="考虑在生成树去掉一条树枝a，显然树被分成了两个连通块，此时，所有在G中且满足能够重新将两个块“连起来”的边所构成的集合，叫作树枝a对应的基本割集" ID="ID_233681058" CREATED="1641717249483" MODIFIED="1641717448718">
<node TEXT="基本割集必然包括那根被去掉的树枝，基本割集在最坏的情况可以只有这一个元素" ID="ID_455345132" CREATED="1641717374809" MODIFIED="1641717431991"/>
</node>
</node>
<node TEXT="所有基本割集的集合叫作生成树的基本割集系统" ID="ID_1415941418" CREATED="1641717457108" MODIFIED="1641717470093"/>
</node>
</node>
</node>
<node TEXT="二叉树" ID="ID_1028096487" CREATED="1640959871581" MODIFIED="1640959884315">
<node TEXT="遍历" ID="ID_1320156089" CREATED="1640959904245" MODIFIED="1640959907957"/>
</node>
<node TEXT="最小生成树" ID="ID_74940527" CREATED="1640959743366" MODIFIED="1640959770130">
<node TEXT="kruskal" ID="ID_641714074" CREATED="1641714066142" MODIFIED="1641714073535"/>
<node TEXT="*prim" ID="ID_1279705766" CREATED="1641714093805" MODIFIED="1641714097107"/>
<node TEXT="*次小生成树" ID="ID_1850083741" CREATED="1641714122621" MODIFIED="1641714131435"/>
</node>
<node TEXT="树应用" ID="ID_976980796" CREATED="1640959770367" MODIFIED="1640961813029">
<node TEXT="二元树" ID="ID_1622262291" CREATED="1640959792265" MODIFIED="1640959795266">
<node TEXT="哈夫曼树(最佳前缀码)" ID="ID_1583484553" CREATED="1640959774935" MODIFIED="1641717604191"/>
<node TEXT="前缀/中缀/后缀表达式" ID="ID_417713741" CREATED="1641717604721" MODIFIED="1641717647670"/>
</node>
<node TEXT="*博弈树" ID="ID_1417408728" CREATED="1640961814680" MODIFIED="1641046617037"/>
<node TEXT="*决策树" ID="ID_120454878" CREATED="1640961819312" MODIFIED="1641046621261"/>
</node>
<node TEXT="*最近公共祖先(LCA)" ID="ID_1581772632" CREATED="1640959939210" MODIFIED="1641046609701"/>
</node>
</node>
<node TEXT="*群，环，域" POSITION="right" ID="ID_1073122458" CREATED="1640961028248" MODIFIED="1641096058906"/>
<node TEXT="*计算模型" POSITION="right" ID="ID_1833337611" CREATED="1640838937422" MODIFIED="1640838942419">
<node TEXT="语言与文法" ID="ID_93862365" CREATED="1640838943219" MODIFIED="1640838949420"/>
<node TEXT="有限状态机" ID="ID_1555364906" CREATED="1640838949993" MODIFIED="1640962177746"/>
<node TEXT="图灵机" ID="ID_129752820" CREATED="1640838970997" MODIFIED="1640949489270"/>
</node>
</node>
</map>
